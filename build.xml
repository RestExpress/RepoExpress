<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build-all" name="RepoExpress">

	<property environment="env"/>
	<property file="build.properties"/>
	<property name="dir.src.java" value="${basedir}/src/java"/>
	<property name="dir.src.common" value="${dir.src.java}/common"/>
	<property name="dir.src.mongodb" value="${dir.src.java}/mongodb"/>
	<property name="dir.src.voldemort" value="${dir.src.java}/voldemort"/>
	<property name="dir.src.redis" value="${dir.src.java}/redis"/>
	<property name="dir.test.java" value="${basedir}/test/java"/>
	<property name="dir.test.common" value="${dir.test.java}/common"/>
	<property name="dir.test.mongodb" value="${dir.test.java}/mongodb"/>
	<property name="dir.test.voldemort" value="${dir.test.java}/voldemort"/>
	<property name="dir.test.redis" value="${dir.test.java}/redis"/>
	<property name="dir.build" value="${basedir}/build"/>
	<property name="dir.compile" value="${dir.build}/classes"/>
	<property name="dir.compile.common" value="${dir.compile}/common"/>
	<property name="dir.compile.mongodb" value="${dir.compile}/mongodb"/>
	<property name="dir.compile.voldemort" value="${dir.compile}/voldemort"/>
	<property name="dir.compile.redis" value="${dir.compile}/redis"/>
	<property name="dir.compile.test" value="${dir.compile}/test"/>
	<property name="dir.lib" value="${basedir}/lib"/>
	<property name="dir.dist" value="${basedir}/dist"/>
	<property name="dir.test.results" value="${dir.build}/junit"/>
	<property name="dir.test.report" value="${dir.test.results}/report"/>

	<path id="compile.classpath">
		<pathelement location="${dir.compile.common}"/>
		<pathelement location="${dir.compile.mongodb}"/>
		<pathelement location="${dir.compile.voldemort}"/>
		<pathelement location="${dir.compile.redis}"/>
		<fileset dir="${dir.lib}">
			<include name="**/*.jar"/>
		</fileset>
    </path>

	<path id="runtime.classpath">
		<pathelement location="${dir.compile.common}"/>
		<pathelement location="${dir.compile.mongodb}"/>
		<pathelement location="${dir.compile.voldemort}"/>
		<pathelement location="${dir.compile.redis}"/>
		<fileset dir="${dir.lib}">
			<include name="**/*.jar"/>
			<exclude name="**/sources/*"/>
		</fileset>
    </path>

	<path id="unit_test.classpath">
		<path refid="runtime.classpath"/>
		<pathelement location="${dir.compile.test}"/>
    </path>

    <target name="_init">
		<mkdir dir="${dir.compile}"/>
		<mkdir dir="${dir.compile.common}"/>
		<mkdir dir="${dir.compile.mongodb}"/>
		<mkdir dir="${dir.compile.voldemort}"/>
		<mkdir dir="${dir.compile.redis}"/>
		<mkdir dir="${dir.compile.test}"/>
		<mkdir dir="${dir.dist}"/>
    </target>

	<target name="clean">
		<delete dir="${dir.build}"/>
		<delete dir="${dir.dist}"/>
    </target>

	<!-- ====================================================================== 
          target: compile
         ====================================================================== -->
    <target name="compile"  depends="_init">
		<javac destdir="${dir.compile.common}"
			failonerror="yes"
			fork="yes"
    		source="${javac.source}"
    		target="${javac.target}"
    		debug="${javac.debug}">
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
			<src>
				<pathelement location="${dir.src.common}"/>
			</src>
		</javac>

    	<javac destdir="${dir.compile.mongodb}"
			failonerror="yes"
			fork="yes"
    		source="${javac.source}"
    		target="${javac.target}"
    		debug="${javac.debug}">
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
			<src>
				<pathelement location="${dir.src.mongodb}"/>
			</src>
		</javac>

    	<javac destdir="${dir.compile.voldemort}"
			failonerror="yes"
			fork="yes"
    		source="${javac.source}"
    		target="${javac.target}"
    		debug="${javac.debug}">
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
			<src>
				<pathelement location="${dir.src.voldemort}"/>
			</src>
		</javac>

    	<javac destdir="${dir.compile.redis}"
			failonerror="yes"
			fork="yes"
    		source="${javac.source}"
    		target="${javac.target}"
    		debug="${javac.debug}">
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
			<src>
				<pathelement location="${dir.src.redis}"/>
			</src>
		</javac>

		<javac destdir="${dir.compile.test}"
			failonerror="yes"
			fork="yes"
    		source="${javac.source}"
    		target="${javac.target}"
    		debug="${javac.debug}">
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
			<src>
				<pathelement location="${dir.test.common}"/>
				<pathelement location="${dir.test.mongodb}"/>
				<pathelement location="${dir.test.voldemort}"/>
				<pathelement location="${dir.test.redis}"/>
			</src>
		</javac>
    </target>
	
	<!-- ====================================================================== 
          target: build
         ====================================================================== -->
	<target name="build" depends="compile, unit-test"/>

	<!-- ====================================================================== 
          target: build-all
         ====================================================================== -->
	<target name="build-all" depends="clean, compile, unit-test"/>

	<!-- ====================================================================== 
          target: unit-test
         ====================================================================== -->
    <target name="unit-test" depends="_init, compile" description="--> Execute RepoExpress unit tests">
        <delete dir="${dir.test.results}"/>
    	<mkdir dir="${dir.test.results}"/>
    	<junit printsummary="true">
    		<classpath refid="unit_test.classpath"/>
    		<formatter type="xml" usefile="true"/>
    		<batchtest errorproperty="test.failure" failureproperty="test.failure" fork="yes" todir="${dir.test.results}">
    			<fileset dir="${dir.test.common}">
    				<include name="**/*Test.java"/>
    				<include name="**/*TestCase.java"/>
    			</fileset>
    			<fileset dir="${dir.test.mongodb}">
    				<include name="**/*Test.java"/>
    				<include name="**/*TestCase.java"/>
    			</fileset>
    		</batchtest>
    	</junit>
    	
    	<mkdir dir="${dir.test.report}"/>
    	<junitreport todir="${dir.test.report}">
    		<report format="frames" todir="${dir.test.report}"/>
    		<fileset dir="${dir.test.results}"/>
    	</junitreport>
    	
    	<fail if="test.failure" message="Unit-Tests failed."/>
    </target>

	<!-- ====================================================================== 
          target: release
         ====================================================================== -->
    <target name="release" depends="_init, compile" description="Release a distro">
		<buildnumber/>
		<jar destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}.jar">
    		<fileset dir="${dir.compile.common}"/>
    	</jar>
		<jar destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}-mongodb.jar">
    		<fileset dir="${dir.compile.mongodb}"/>
    	</jar>
		<jar destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}-voldemort.jar">
    		<fileset dir="${dir.compile.voldemort}"/>
    	</jar>
		<jar destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}-redis.jar">
    		<fileset dir="${dir.compile.redis}"/>
    	</jar>
		<jar destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}-src.jar">
    		<fileset dir="${dir.src.common}"/>
    		<fileset dir="${dir.src.mongodb}"/>
    		<fileset dir="${dir.src.voldemort}"/>
       		<fileset dir="${dir.src.redis}"/>
    	</jar>
		<zip destfile="${dir.dist}/${ant.project.name}-${version}-${build.number}-deps.zip">
    		<zipfileset dir="${dir.lib}" excludes="junit/"/>
    		<zipfileset dir="${dir.dist}" includes="*.jar" excludes="*-src.jar"/>
    	</zip>
    </target>

    <target name="install" depends="release" description="Install a release in the lib/ directory">
    	<copy todir="../lib">
    		<fileset dir="${dir.dist}"/>
    	</copy>
    </target>

</project>
